@keyframes invalidFlash
{
    0%, 50%
    {
        background-color: red;
    }
    25%, 75%, 100%
    {
        background-color: rgba(245, 245, 220, 0.5);
    }
}
.invalid
{
    animation-name: invalidFlash;
    animation-duration: 1s;
    animation-iteration-count: 1;
}
.error
{
    border-color: red !important;
}

.errorMsg
{
    color: red;
}

body
{
    background-color: cadetblue;
    color: seashell;
    text-align: center;
}

header
{
    padding: 0 1em;
    font-weight: bold;
    margin: auto auto 1em auto;
    text-align: center;
}
main
{
    position: relative;
}

.hide
{
    display: none !important;
}

.ignoreFormatting
{
    all: unset;
}

.midWidth
{
    width: 60vw;
    max-width: 50em;
    min-width: 14em;
}
.dark
{
    background-color: rgba(112, 128, 144, 0.7);
}

/*
 * Begin Form *
 */

header, form > p > input[type="button"], form input[type="submit"], select
{
    background-color: seagreen;
    color: seashell;
    border: solid 1px seashell;
}

form > p > input[type="button"].secondary, form input[type="submit"].secondary
{
    float: right;
    font-size: 0.7em;
}

form
{
    display: inline-block;
    margin: auto;
    padding: 0.5em 1em;
}
form > p
{
    display: block;
    text-align: left;
    white-space: nowrap;
    min-height: 1.4em;
}

form > p > label, form > p > label.checkInput > span.chkText
{
    text-align: left;
    min-width: 10em;
    text-wrap: normal;
    color: inherit;
    display: block;
    padding-bottom: 0.4em;

}

form > p input
{
    margin-left: 0;
}

form > p > input[type="text"], form > p > input[type="password"]
{
    background-color: rgba(245, 245, 220, 0.5);
    width: 30vw;
    max-width: 30em;
    height: 1.4em;
}

select
{
    width: 30vw;
    max-width: 30em;
    height: 1.4em;
}

form > p > input[type="date"]
{
    background-color: rgba(245, 245, 220, 0.5);
    height: 1.4em;
}

form > p > textarea
{
    border: inset 2px #EBE9ED;
    background-color: rgba(245, 245, 220, 0.5);
    width: 30vw;
    max-width: 30.75em;
    resize: vertical;
    height: 10em;
    min-height: 1.4em;
    font-family: sans-serif;
    font-size: small;
}

form > p > input[type="file"]
{
    background-color: rgba(245, 245, 220, 0.5);
    width: 30vw;
    max-width: 40em;
}

form select
{
    width: 30vw;
    max-width: 40em;
    height: 1.4em;
}

form > p > input[type="button"]:hover, form input[type="submit"]:hover
{
    border: inset 1px seashell;
    cursor: pointer;
}

form > p > input[type="button"]::-moz-focus-inner
{
    border: 0;
}

/*
 * Begin Table *
 */

table
{
    border-collapse: collapse;
}

td, th
{
    padding: 0.2em 1.5em;
    border: solid 1px seashell;
    text-align: center;
}

table tr:nth-child(2n+2)
{
    background-color: cadetblue;
    color: seashell;
}
table tr:nth-child(2n+1)
{
    background-color: seagreen;
    color: seashell;
}

table.hover tr:nth-child(2n+2):hover td
{
    background-color: lightskyblue;
    color: seagreen;
}
table.hover tr:nth-child(2n+1):hover td
{

    background-color: palegreen;
    color: cornflowerblue;
}

.submitable td
{
    padding: 0;
}

.submitable, .submitable *
{
    cursor: alias;
}

.submitable label
{
    position: relative;
    display: inline-block;
    width: 100%;
}

/* I needed this for some reason, but it prevented content from line breaking. Keeping here just in case.
table.expandLast tr > td, table.expandLast tr > th
{
    white-space: nowrap;
}
*/

table.expandLast tr > td:last-child,table.expandLast tr > th:last-child
{
    width: 99%;
}

/*
 * Begin Tabs *
 */

.tabs
{
    position: relative;
    clear: both;
}
.tab
{
    float: left;
}
.tab > label
{
    white-space: nowrap;
    background-color: cornflowerblue;
    color: seashell;
    border-radius: 10px 10px 0 0;
    border: 1px solid seashell;
    padding: 0.2em 0.4em;
    margin-right: -0.2em;
    position: relative;
    cursor: pointer;
}
.tab > label:hover
{
    padding-top: 0.4em;
}
.tab > input[type="radio"]
{
    display: none;
}
.tab > .tabContent
{
    width: 100%;
    position: absolute;
    left: 0;
    top: 1.3em;
    display: none;
    z-index: -1;
}

.tab > .tabContent > .tabContainer
{
    padding: 0.4em;
    border: 1px solid seashell;
    background-color: mediumaquamarine;
    color: darkgreen;
}

.tab > input[type="radio"]:checked ~ label
{
    background-color: mediumaquamarine;
    color: darkgreen;
    padding-top: 0.4em;
    padding-bottom: 0.3em;
    border-bottom: none;
    cursor: auto;
}
.tab > input[type="radio"]:checked ~ .tabContent
{
    display: inline-block;
}

/*
 * Begin Figure *
 */

figure
{
    background-color: seashell;
    padding: 1em 0;
    border: outset 3px seagreen;
}
figure img
{
    background-color: cadetblue;
    border: inset 3px seagreen;
}

ul
{
    color: beige;
    text-align: left;
    margin: auto;
    width: 60vw;
    max-width: 50em;
    min-width: 18em;
}

a.beautify
{
    text-decoration: none;
    color: inherit;
}

a.beautify:visited
{
    color: inherit;
}

a.beautify-u
{
    color: inherit;
}

a.beautify-u:visited
{
    color: inherit;
}

/*
 * Notification box *
 */

.notification-container
{
    position: fixed;
    bottom: 0;
    width: 100%;
    margin: 0 -8px 0 -8px;
}
.notification
{
    color: white;
    background-color: black;
    border: 1px dashed yellow;
    padding: 0.5em;
    opacity: 0.75;
}
.notification > .message
{
    text-align: left;
}
.notification > label.exit
{
    text-align: right;
    display: block;
}
.notification > label.exit:hover
{
    text-decoration: underline;
    cursor: pointer;
}
.notification-container > input[type="checkbox"]
{
    display: none;
}
.notification-container > input[type="checkbox"]:checked ~ .notification
{
    display: none;
}


@media all and (min-width: 768px)
{
    form > p > label, form > p > label.checkInput > span.chkText
    {
        float: left;
        text-align: right;
        width: 22%;
        min-width: 10em;
        max-width: 15em;
        text-wrap: normal;
        padding-right: 2em;
    }
}